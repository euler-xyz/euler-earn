{
    "assert_autofinder_success": true,
    "contract_recursion_limit": "1",
    "files": [
        "certora/harnesses/EulerEarnHarness.sol",
        "lib/ethereum-vault-connector/src/EthereumVaultConnector.sol",
        "lib/euler-vault-kit/lib/permit2/src/Permit2.sol",
        "src/EulerEarnFactory.sol",
        "test/mocks/PerspectiveMock.sol",
        "certora/mocks/VaultMock0.sol",
        "certora/mocks/VaultMock1.sol",
        "certora/mocks/Token0.sol"
    ],
    "global_timeout": "7200",
    "loop_iter": "2",
    "msg": "sanity_EulerEarn",
    "optimistic_loop": true,
    "packages": [
        "ethereum-vault-connector=lib/ethereum-vault-connector/src",
        "euler-vault-kit=lib/euler-vault-kit/src",
        "forge-std=lib/forge-std/src",
        "solmate=lib/euler-vault-kit/lib/permit2/lib/solmate"
    ],
    "process": "emv",
    "link": [
        "EulerEarnHarness:evc=EthereumVaultConnector",
        "EulerEarnHarness:permit2Address=Permit2",
        "EulerEarnFactory:permit2Address=Permit2",
        "EulerEarnFactory:perspective=PerspectiveMock",
        "VaultMock0:_asset=Token0",
        "VaultMock1:_asset=Token0",
        "EulerEarnHarness:_asset=Token0"
    ],
    "prover_args": [
        "-verifyCache ",
        "-verifyTACDumps",
        "-testMode",
        "-checkRuleDigest",
        "-callTraceHardFail on",
        "-cvlFunctionRevert true"
    ],
    "compiler_map": {
        "EulerEarnHarness": "solc-0.8.26",
        "EthereumVaultConnector": "solc-0.8.26",
        "Permit2": "solc-0.8.17",
        "EulerEarnFactory": "solc-0.8.26",
        "PerspectiveMock": "solc-0.8.26",
        "VaultMock0": "solc-0.8.26",
        "VaultMock1": "solc-0.8.26",
        "Token0": "solc-0.8.26"
    },
    "solc_optimize": "200",
    "solc_via_ir": true,
    "verify": "EulerEarnHarness:certora/specs/setup/sanity_EulerEarn.spec",
    "parametric_contracts": [
        "EulerEarnHarness"
    ]
}
